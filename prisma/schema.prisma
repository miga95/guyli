// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Models

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  password      String?
  role          Role      @default(GUEST)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  UserSubscription UserSubscription[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Subscription {
  id              Int              @id @default(autoincrement())
  name            SubscriptionName @default(NETFLIX)
  logId           String?
  password        String?
  nb_user_max     Int
  nb_user_current Int              @default(0)
  price           Float
  start_date      DateTime?
  end_date        DateTime?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  UserSubscription UserSubscription[]
}

//Pivots

model UserSubscription {
  id              Int      @id @default(autoincrement())
  subscriptionId  Int
  userId          Int
  user_start_date DateTime
  user_end_date   DateTime

  user         User         @relation(fields: [userId], references: [id])
  subscription Subscription @relation(fields: [subscriptionId], references: [id])
}

//Enums
enum Role {
  ADMIN
  HOST
  GUEST
}

enum SubscriptionName {
  NETFLIX
}
